<?xml version="1.0" encoding="utf-8"?>
<project name="ManagementConsole" default=".help">

    <import file="${basedir}/.sencha/app/build-impl.xml"/>

    <target name="-before-init">
        <if>
            <and>
                <not>
                    <equals arg1="${amd.compiled}" arg2="true"/>
                </not>
            </and>
            <then>
                <!-- Compile AMD files -->
                <exec executable="npm.cmd" dir="${basedir}" osfamily="winnt">
                    <arg value="install"/>
                </exec>
                <exec executable="npm" dir="${basedir}" osfamily="unix">
                    <arg value="install"/>
                </exec>

                <!-- -before-init call twice - for js and css -->
                <property name="amd.compiled" value="true"/>
            </then>
        </if>
    </target>

    <target name="-compile-js" depends="-detect-app-build-properties">
        <if>
            <equals arg1="${build.environment}" arg2="production"/>
            <then>
                <!-- Compile ExtJS files -->
                <x-compile refid="${compiler.ref.id}">
                    <![CDATA[
                            # build app.js file
                            exclude
                                -namespace=${build.namespace.deft}
                                -namespace=${build.namespace.application}
                                -namespace=Ext.grid.locking.*
                                -namespace=Ext.fx.CubicBezier
                                -namespace=Ext.fx.DrawPath
                                -namespace=Ext.data.session.*
                                -namespace=Ext.data.PageMap
                                -namespace=Ext.data.Batch
                                -namespace=Ext.data.ArrayStore
                                -namespace=Ext.data.BufferedStore
                                -namespace=Ext.data.ChainedStore
                                -namespace=Ext.util.GroupCollection
                                -namespace=Ext.util.CollectionKey
                                -namespace=Ext.util.PaintMonitor
                                -namespace=Ext.util.Translatable
                                -namespace=Ext.util.translatable.*
                                -namespace=Ext.util.Grouper
                                -namespace=Ext.event.gesture.*
                                -namespace=Ext.scroll.TouchScroller
                                -namespace=Ext.scroll.Indicator
                                -namespace=Ext.selection.CheckboxModel
                                -namespace=Ext.selection.CellModel
                                -namespace=Ext.app.domain.Global
                            and
                            ${build.optimize}
                            and
                            concat
                                -remove-text-references=${build.remove.references}
                                -optimize-string-references=${build.optimize.string.references}
                                -remove-requirement-nodes=${build.remove.requirement.nodes}
                                ${build.compression}
                                -out=${build.classes.file}.tmp
                                ${build.concat.options}
                        ]]>
                </x-compile>
                <x-compile refid="${compiler.ref.id}">
                    <![CDATA[
                            # build mc.js file
                            exclude
                                -all
                            and
                            include
                                -namespace=${build.namespace.application}
                            and
                            exclude
                                -file=*T.js
                            and
                            ${build.optimize}
                            and
                            concat
                                -remove-text-references=${build.remove.references}
                                -optimize-string-references=${build.optimize.string.references}
                                ${build.compression}
                                -out=${build.out.application.path}.tmp
                        ]]>
                </x-compile>
                <x-compile refid="${compiler.ref.id}">
                    <![CDATA[
                            # build deft.js file
                            exclude
                                -all
                            and
                            include
                                -namespace=${build.namespace.deft}
                            and
                            exclude
                                # Exclude "controller" preprocessor deft feature because of the conflict requirejs namespaces
                                # Excess and unnecessary functionality of DefJS library
                                -namespace=${build.namespace.deft}.mixin.Controllable
                                -namespace=${build.namespace.deft}.mixin.Injectable
                                -namespace=${build.namespace.deft}.core.*
                                -namespace=${build.namespace.deft}.mvc.*
                            and
                            ${build.optimize}
                            and
                            concat
                                -remove-text-references=${build.remove.references}
                                -optimize-string-references=${build.optimize.string.references}
                                ${build.compression}
                                -out=${build.out.deft.path}.tmp
                        ]]>
                </x-compile>

                <!-- Copy NodeJS modules  -->
                <copy file="${node.requirejs.path}" tofile="${build.out.requirejs.path}.tmp"/>
                <copy file="${build.out.application.amd.path}" tofile="${build.out.application.amd.path}.tmp"/>

                <!-- Concat main files, append versions to head files  -->
                <for list="${build.out.deft.path},${build.out.requirejs.path},${build.out.application.path},${build.classes.file},${build.out.application.amd.path}"
                     param="file">
                    <sequential>
                        <touch file="@{file}.ver"/>
                        <if>
                            <equals arg1="@{file}" arg2="${build.out.deft.path}"/>
                            <then>
                                <echo file="@{file}.ver" append="true">var _deftVersion = "${app.deft.version}";</echo>
                            </then>
                        </if>
                        <if>
                            <equals arg1="@{file}" arg2="${build.out.application.path}"/>
                            <then>
                                <echo file="@{file}.ver" append="true">var _applicationVersion = "${app.version}";</echo>
                            </then>
                        </if>
                        <if>
                            <equals arg1="@{file}" arg2="${build.out.requirejs.path}"/>
                            <then>
                                <echo file="@{file}.ver" append="true">var _requirejsVersion = "${app.requirejs.version}";</echo>
                            </then>
                        </if>
                        <if>
                            <equals arg1="@{file}" arg2="${build.classes.file}"/>
                            <then>
                                <echo file="@{file}.ver" append="true">var _frameworkVersion = "${app.framework.version}";</echo>
                            </then>
                        </if>
                        <if>
                            <equals arg1="@{file}" arg2="${build.out.application.amd.path}"/>
                            <then>
                                <echo file="@{file}.ver" append="true">var _amdApplicationVersion = "${app.version}";</echo>
                            </then>
                        </if>
                        <concat destfile="@{file}">
                            <filelist files="@{file}.ver"/>
                            <filelist files="@{file}.tmp"/>
                        </concat>
                        <delete file="@{file}.ver"/>
                        <delete file="@{file}.tmp"/>
                    </sequential>
                </for>
            </then>
        </if>
    </target>
</project>